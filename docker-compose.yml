version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # Servidor web de Airflow
  webserver:
    image: apache/airflow:2.7.1-python3.9
    command: >
      bash -c "
        pip install --user gspread oauth2client pandas &&
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin123 &&
        airflow webserver --port 8080
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: false
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: true
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./credentials:/opt/airflow/credentials
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  # Programador de tareas
  scheduler:
    image: apache/airflow:2.7.1-python3.9
    command: >
      bash -c "
        pip install --user gspread oauth2client pandas &&
        airflow scheduler
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: false
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./credentials:/opt/airflow/credentials
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

volumes:
  postgres_data: